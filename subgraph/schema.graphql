type PredictionMarket @entity {
  id: ID!               
  matchId: BigInt!
  matchTimestamp: BigInt!
  isResolved: Boolean!
  resolvedOutcome: Int 
}

type SharesPurchased @entity {
  id: ID!               
  market: Bytes!        
  buyer: Bytes!
  outcome: Int!
  shares: BigInt!
  actualCost: BigInt!
  timestamp: BigInt!
}

type SharesSold @entity {
  id: ID!
  market: Bytes!
  seller: Bytes!
  outcome: Int!
  shares: BigInt!
  actualGain: BigInt!
  timestamp: BigInt!
}

type OddsUpdated @entity {
  id: ID!
  market: Bytes!
  matchId: BigInt!
  home: BigInt!
  draw: BigInt!
  away: BigInt!
  timestamp: BigInt!
}

type MarketResolved @entity {
  id: ID!
  market: Bytes!
  matchId: BigInt!
  outcome: Int!
  timestamp: BigInt!
}

type PayoutRedeemed @entity {
  id: ID!
  market: Bytes!
  redeemer: Bytes!
  outcome: Int!
  amount: BigInt!
  timestamp: BigInt!
}
